// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id        String    @id @default(cuid())
  email     String    @unique
  name      String
  password  String
  posts     Post[]
  Comment   Comment[]
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime  @updatedAt @map("updated_at")

  @@map("users")
}

model Post {
  id            String         @id @default(cuid())
  authorId      String         @map("author_id")
  title         String
  subTitle      String         @map("sub_title")
  contentBlocks ContentBlock[]
  Comment       Comment[]
  published     Boolean        @default(false)
  author        User           @relation(fields: [authorId], references: [id])
  createdAt     DateTime       @default(now()) @map("created_at")
  updatedAt     DateTime       @updatedAt @map("updated_at")
}

model ContentBlock {
  id        String   @id @default(cuid())
  postId    String   @map("post_id")
  type      String
  content   String
  Post      Post     @relation(fields: [postId], references: [id])
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
}

model Comment {
  id        String   @id @default(cuid())
  postId    String   @map("post_id")
  authorId  String   @map("author_id")
  content   String
  post      Post     @relation(fields: [postId], references: [id])
  author    User     @relation(fields: [authorId], references: [id])
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
}
